# Add new github action
name: Java CI with Gradle
name: Build and Dockerize

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
#    branches: [ devops-liliya ]

permissions:
  contents: read

jobs:
  build: 

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Test AWS CLI Command
      run: 
        aws ecr describe-repositories

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        distribution: 'adopt'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
      run: ./gradlew build -x test

  #  - name: Build JAR
   #   run: ./gradlew assemble
    - name: Build, Tag, and Push Image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: orderhere
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Image Digest
      run: echo ${{ steps.build-and-push.outputs.digest }}

    - name: Deploy to ECS
      run: |
        
         aws ecs update-service --cluster ecs-cluster --service service --task-definition orderhere
